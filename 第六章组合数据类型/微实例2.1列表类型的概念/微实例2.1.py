# 微实例6.2.1列表类型的概念
"""
列表（list）是包含0个或多个对象引用的有序序列，属于序列类型。
与元组不同，列表的长度和内容都是可变的,可自由对列表中数据项进行增加、删除或替换。
列表没有长度限制，元素类型可以不同，使用非常灵活。
"""
"""
由于列表属于序列类型，所以列表也支持成员关系操作符（in）、长度计算函数（len()）、分片（[]）。
列表可以同时使用正向递增序号和反向递减序号，可以采用标准的比较操作符（<、<=、==、!=、>=、>）进行比较，
列表的比较实际上是单个数据项的逐个比较。
"""
"""
列表用中括号（[]）表示，也可以通过list()函数将元组或字符串转化成列表。
直接使用list()函数会返回一个空列表。
"""
ls = [425, "BIT", [10, "CS"], 425]
print(ls)
print(ls[2][-1][0])
print(list((425, "BIT", [10, "CS"], 425)))
print(list("中国是一个伟大的国家"))
print(list())

"""
与整数和字符串不同，列表要处理一组数据，
因此，列表必须通过显式的数据赋值才能生成，
简单将一个列表赋值给另一个列表不会生成新的列表对象。
"""
ls = [425, "BIT", 1024]  # 用数据赋值产生列表ls
lt = ls  # lt是ls所对应数据的引用，lt并不包含真实数据
ls[0] = 0
print(lt)
