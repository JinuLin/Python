# 微实例7.1.1序列类型
import math

"""
序列类型是一个元素向量，元素之间存在先后关系，通过序号访问，元素之间不排他。
集合类型是一个元素集合，元素之间无序，相同元素在集合中唯一存在。
映射类型是“键-值”数据项的组合，每个元素是一个键值对，表示为(key, value)。
"""
"""
序列类型是一维元素向量，元素之间存在先后关系，通过序号访问。
当需要访问序列中某特定值时，只需要通过下标标出即可。
"""
"""
由于元素之间存在顺序关系，所以序列中可以存在相同数值但位置不同的元素。
序列类型支持成员关系操作符（in）、长度计算函数（len()）、分片（[]），元素本身也可以是序列类型。
"""
"""
Python语言中有很多数据类型都是序列类型，其中比较重要的是：str（字符串）、tuple（元组）和list（列表）。
元组是包含0个或多个数据项的不可变序列类型。元组生成后是固定的，其中任何数据项不能替换或删除。
列表则是一个可以修改数据项的序列类型，使用也最灵活。
"""
"""
序列类型有12个通用的操作符和函数
x in s：如果x是s的元素，返回True，否则返回False
x not in s：如果x不是s的元素，返回True，否则返回False
s + t：连接s和t
s * n 或 n * s：将序列s复制n次
s[i]：索引，返回序列的第i个元素
s[i: j]：分片，返回包含序列s第i到j个元素的子序列（不包含第j个元素）
s[i: j: k]：步骤分片，返回包含序列s第i到j个元素以j为步数的子序列
len(s)：序列s的元素个数（长度）
min(s)：序列s中的最小元素
max(s)：序列s中的最大元素
s.index(x[, i[, j]])：序列s中从i开始到j位置中第一次出现元素x的位置
s.count(x)：序列s中出现x的总次数
"""
"""
元组（tuple）是序列类型中比较特殊的类型，因为它一旦创建就不能被修改。
元组类型在表达固定数据项、函数多返回值、多变量同步赋值、循环遍历等情况下十分有用。
Python中元组采用逗号和圆括号（可选）来表示。
"""
creature = "cat", "dog", "tiger", "human"  # 生成元组只需要用逗号隔开即可
print(creature)
color = ("red", 0x001100, "blue", creature)  # 元组可以嵌套
# 也可以增加圆括号，只要不混淆语义，括号可以省略
print(color)
print(color[2])
print(color[-1][2])  # 元组中嵌套元组，可以采用多级索引进行访问

"""
元组除了用于表达固定数据项外，还可以用于函数多返回值、多变量同步赋值、循环遍历等情况。
"""


def func(i):  # 函数多返回值
    return i, i ** 3


a, b = 'dog', 'tiger'  # 多变量同步赋值
a, b = (b, a)  # 多变量同步赋值，括号可省略

for x, y in ((1, 0), (2, 5), (3, 8)):  # 循环遍历
    print(math.hypot(x, y))  # 求多个坐标值到原点的距离
