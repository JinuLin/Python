# 微实例2.1.1温度转换实例
TempStr = input("请输入带有符号的温度值: ")  # TemStr表示占位符。=为赋值符号。
if TempStr[-1] in ['F', 'f']:
    C = (eval(TempStr[0:-1]) - 32) / 1.8
    print("转换后的温度是{:.2f}C".format(C))
elif TempStr[-1] in ['C', 'c']:
    F = 1.8 * (eval(TempStr[0:-1])) + 32
    print("转换后的温度是{:.2f}F".format(F))
else:
    print("输入格式错误")
"""
Python语言采用严格的“缩进”来表明程序的格式框架。
缩进指每一行代码开始前的空白区域，用来表示代码之间的包含和层次关系。
1个缩进 = 4个空格 = 一个Tab键
用以在Python中标明代码的层次关系
缩进是Python语言中表明程序框架的唯一手段
"""
"""
注释：用“#”为单行注释或用“""" """”多行注释
"""
"""
命名与保留字：
常量：程序中值不发生改变的元素
变量：程序中值发生改变或者可以发生改变的元素
Python语言允许采用大写字母、小写字母、数字、下划线(_)和汉字等字符及其组合给变量命名，
但名字的首字符不能是数字，中间不能出现空格，长度没有限制
注意：标识符对大小写敏感，python和Python是两个不同的名字
保留字，也称为关键字，指被编程语言内部定义并保留使用的标识符。
程序员编写程序不能定义与保留字相同的标识符。
每种程序设计语言都有一套保留字，
保留字一般用来构成程序整体框架、表达关键值和具有结构性的复杂语义等。
Python有33个保留字：
and elif import raise
as else in return
assert except is try
break finally lambda while
class for nonlocal with
continue from not yield
def global or True
del if pass False 
None 
"""
"""
其中"请 输 入 带 有 符 号 的 温 度 值 : "是字符串类型，用双引号或单引号表示。
正向为0 1  2  3 4  5  6 7 8  9 10 11
反向-12-11-10-9-8 -7 -6-5-4 -3 -2 -1
"""
"""
赋值语句：
Python语言中，= 表示“赋值”，即将等号右
侧的值计算后将结果值赋给左侧变量 ，包含等号（=）的语句称为“赋值语句”
同步赋值语句：同时给多个变量赋值
<变量1>, ..., <变量N> = <表达式1>, ..., <表达式N>
用单个赋值，需要3行语句：
即通过一个临时变量t缓存x的原始值，然后将y值赋给x，
再将x的原始值通过t赋值给y。
采用同步赋值语句，仅需要一行代码：
t=x, x=y, y=t <=> x,y = y,x
"""
"""
input()函数：获得用户输入之前，input()函数可以包含一些提示性文字
<变量> = input(<提示性文字>)
"""
"""
分支语句：
分支语句是控制程序运行的一类重要语句，它的作用是根据
判断条件选择程序执行路径，使用方式如下：
if <条件1>:
    <语句块1>
elif <条件2>:
    <语句块2>
    ... 
else: 
    <语句块N>
"""
"""
eval()函数：
eval(<字符串>)函数是Python语言中一个十分重要的函数，
它能够以Python表达式的方式解析并执行字符串，将返回结果输出
如果希望用户输入一个数字（小数或负数），并且程序对这个数字进行计算，
可以采用eval(input(<输入提示字符串>))的组合
"""
"""
print()函数：
print()函数用来输出字符信息，或以字符形式输出变量。
print()函数可以输出各种类型变量的值。
print()函数通过%来选择要输出的变量。
输出元组print((123)) 输出列表([1,2,3]) 输出字典({'a':1,'b':2}) 
可以用,end=""来取消结束，实现不换行。
在print里可以回车，但是会单行显示，可以用''' '''会将全部操作输出
print可以做格式化输出:
如print("要输出的数字%d"%i)，其中i为定义的变量名，%d为十进制数，%s字符，%f是浮点型。
多个数值输出格式为：print("要输出的%s和%f和%d"%(a,b,c))其中a，b，c为设置好的变量。
"""
"""
循环语句：控制程序运行，根据判断条件或计数条件确定一段程序的运行次数
遍历循环，基本过程如下
for i in range (<计数值>):
    <表达式1>
例如，使某一段程序连续运行10次
for i in range (10):
    <源代码>
其中，变量i用于计数
"""
